name: Python package Lint+Test

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        # python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
        python-version: [ "3.13" ]
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          version: "latest"
          enable-cache: true

      - name: Rust toolchain
        run: rustup toolchain install stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install the project
        run: uv sync --extra dev --extra tests --verbose

      - name: Minimize uv cache
        run: uv cache prune --ci

      - name: Lint
        run: make lint

      - name: Test with pytest
        run: make test

      - name: Build the package
        if: matrix.python-version == '3.13'
        run: uv build --wheel

      - name: Verify wheel installation
        if: matrix.python-version == '3.13'
        run: |
          uv run --verbose --with ftl_extract --no-project --refresh-package ftl_extract -- python -c "import ftl_extract; print(ftl_extract.__version__)"
          uv run --verbose --with ftl_extract --no-project --refresh-package ftl_extract -- ftl-extract --version
          uv run --verbose --with ftl_extract --no-project --refresh-package ftl_extract -- fast-ftl-extract --version

      - name: Store artifacts
        if: matrix.python-version == '3.13'
        uses: actions/upload-artifact@v4
        with:
          name: ftl_extract-${{ matrix.os }}-${{ matrix.python-version }}
          if-no-files-found: error
          path: |
            dist/*.whl
            dist/*.tar.gz
