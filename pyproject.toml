[tool.poetry]
name = "FTL-Extract"
description = "Extracts FTL files from a directory and outputs them to a directory"
version = "0.4.2"
authors = ["andrew000"]
keywords = ["ftl", "ftl-extract", "ftl-extractor"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "ftl_extract", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.9"
fluent-syntax = "^0.19"

[tool.poetry.group.test.dependencies]
pytest = "8.3.2"
pytest-cov = "5.0.0"
pytest-html = "4.1.1"
pytest-mock = "3.14.0"
coverage = "7.6.1"

[tool.poetry.group.docs.dependencies]
sphinx = "7.4.7"
sphinx-rtd-theme = "2.0.0"
sphinx-autobuild = "2024.4.16"
furo = "2024.8.6"
pytz = "2024.1"

[tool.poetry.group.dev.dependencies]
black = "24.8.0"
isort = "5.13.2"
pre-commit = "3.8.0"
ruff = "0.6.1"
mypy = "1.11.1"
typing-extensions = "4.12.2"

[tool.poetry.scripts]
ftl_extract = "ftl_extract.cli:cli_extract"
ftl_export = "ftl_export.__main__:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"

[tool.mypy]
packages = ["src/ftl_extract"]
exclude = [
    "\\.?venv",
    "\\.idea",
    "\\.tests?",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if TYPE_CHECKING:",
    "importlib.metadata",
]

[tool.isort]
py_version = 39
src_paths = ["src", "tests"]
line_length = 100
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = true
split_on_trailing_comma = false
single_line_exclusions = ["."]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["ftl_extract"]

[tool.ruff]
src = ["src", "tests"]
target-version = "py39"
line-length = 100
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    "tests/.data_for_testing",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A003",
    "ANN002", "ANN003", "ANN101", "ANN102", "ANN401",
    "COM812",
    "C901",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D205", "D212",
    "DTZ003",
    "ERA001",
    "F841",
    "FA100", "FA102",
    "FBT001", "FBT002",
    "FIX002",
    "INP001", "ISC001",
    "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR5501",
    "PLW0120",
    "RUF",
    "S101", "S311",
    "TD002", "TD003"
]
