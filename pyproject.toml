[project]
name = "FTL-Extract"
description = "Extracts FTL files from a directory and outputs them to a directory"
version = "0.4.4"
authors = [{ name = "andrew000", email = "help@kusbot.com" }]
keywords = ["ftl", "ftl-extract", "ftl-extractor"]
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
dependencies = [
    "fluent-syntax>=0.19",
    "click==8.*",
]

[project.optional-dependencies]
dev = [
    "isort==5.13.2",
    "pre-commit==4.0.1",
    "ruff==0.7.1",
    "mypy==1.13.0",
    "typing-extensions==4.12.2",
]
tests = [
    "pytest==8.3.3",
    "pytest-cov==5.0.0",
    "pytest-html==4.1.1",
    "pytest-mock==3.14.0",
    "coverage==7.6.1",
]
docs = [
    "sphinx==7.4.7",
    "sphinx-rtd-theme==2.0.0",
    "sphinx-autobuild==2024.9.19",
    "furo==2024.8.6",
    "pytz==2024.2",
]
pcu = [
    "pip-check-updates==0.27.0",
]

[project.urls]
Homepage = "https://github.com/andrew000/FTL-Extract"
Issues = "https://github.com/andrew000/FTL-Extract/issues"
Repository = "https://github.com/andrew000/FTL-Extract"

[project.scripts]
ftl-extract = "ftl_extract.cli:cli_extract"
ftl_extract = "ftl_extract.cli:cli_extract"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = "tests"

[tool.mypy]
packages = ["src/ftl_extract"]
exclude = [
    "\\.?venv",
    "\\.idea",
    "\\.tests?",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if TYPE_CHECKING:",
    "importlib.metadata",
]

[tool.isort]
py_version = 39
src_paths = ["src", "tests"]
line_length = 100
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = true
split_on_trailing_comma = false
single_line_exclusions = ["."]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["ftl_extract"]

[tool.ruff]
src = ["src", "tests"]
target-version = "py39"
line-length = 100
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    "tests/.data_for_testing",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A003",
    "ANN002", "ANN003", "ANN101", "ANN102", "ANN401",
    "COM812",
    "C901",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D205", "D212",
    "DTZ003",
    "ERA001",
    "F841",
    "FA100", "FA102",
    "FBT001", "FBT002",
    "FIX002",
    "INP001", "ISC001",
    "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR5501",
    "PLW0120",
    "RUF",
    "S101", "S311",
    "TD002", "TD003"
]
