[project]
name = "FTL-Extract"
description = "Extract fluent keys from python code and organize them in .ftl files"
version = "0.9.0"
authors = [{ name = "andrew000", email = "help@kusbot.com" }]
keywords = ["i18n", "ftl", "ftl-extract"]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10, <3.14"
classifiers = [
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "click==8.*",
    "fluent-syntax>=0.19",
]

[project.optional-dependencies]
dev = [
    "cibuildwheel==2.23.3",
    "fluent-runtime==0.4.0",
    "isort==7.0.0",
    "mypy==1.18.2",
    "pre-commit==4.3.0",
    "ruff==0.14.1",
    "setuptools-rust==1.12.0",
    "setuptools==80.9.0",
    "wheel==0.45.1",
]
tests = [
    "coverage==7.11.0",
    "pytest-cov==7.0.0",
    "pytest-html==4.1.1",
    "pytest-mock==3.15.1",
    "pytest==8.4.2",
]
docs = [
#    "furo==2025.7.19",
#    "pytz==2025.2",
#    "sphinx-autobuild==2024.10.3",
#    "sphinx-rtd-theme==3.0.2",
#    "sphinx==7.4.7",
]

[project.urls]
Homepage = "https://github.com/andrew000/FTL-Extract"
Issues = "https://github.com/andrew000/FTL-Extract/issues"
Repository = "https://github.com/andrew000/FTL-Extract"

[project.scripts]
ftl = "ftl_extract.cli:ftl"

[tool.uv]
package = true

[build-system]
requires = ["setuptools", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build = "cp313-*"
archs = ["auto64"]
build-frontend = "build[uv]"
build-verbosity = 1

[tool.cibuildwheel.linux]
before-all = "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal"
before-build = "cargo build --release"
environment = { PATH = "$HOME/.cargo/bin:$PATH", BUILD_RUST_IMPL = 1 }

[tool.pytest.ini_options]
testpaths = "tests"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if TYPE_CHECKING:",
    "importlib.metadata",
]

[tool.isort]
py_version = 310
src_paths = ["src", "tests"]
line_length = 100
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = true
split_on_trailing_comma = false
single_line_exclusions = ["."]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["ftl_extract"]

[tool.ruff]
src = ["src", "tests"]
line-length = 100
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "__pycache__",
    "venv",
    ".venv",
    "tests/.files",
    "tests/files/py",
    "dist",
    "build",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A003",
    "ANN002", "ANN003", "ANN401",
    "C901",
    "COM812",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D205", "D212",
    "ERA001",
    "FA100", "FA102",
    "FBT001", "FBT002",
    "FIX002",
    "I001",
    "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR5501",
    "PLW0120",
    "RUF001",
    "S101",
    "TC006", "TD002", "TD003",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
mypy_path = "src"
packages = ["ftl_extract"]
plugins = []
allow_redefinition = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
extra_checks = true
follow_imports = "skip"
follow_imports_for_stubs = false
ignore_missing_imports = false
namespace_packages = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_absolute_path = true
show_error_codes = true
show_error_context = true
warn_unused_configs = true
warn_unused_ignores = true
disable_error_code = [
    "no-redef",
]
exclude = [
    "\\.?venv",
    "\\.idea",
    "\\.tests?",
]
